# This GitHub Action uses the official GitHub CLI to create issues for new action items.

name: Check for Action Items

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  # The first job, named 'check-for-items'. Its purpose is to run the Python script.
  check-for-items:
    runs-on: ubuntu-latest
    outputs:
      create_issue: ${{ steps.check_script.outputs.create_issue }}
      issue_title: ${{ steps.check_script.outputs.issue_title }}
      issue_body: ${{ steps.check_script.outputs.issue_body }}
      
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Check Action Items Script
        id: check_script
        run: python scripts/check_action_items.py

  # The second job, named 'create-issue'. Its purpose is to create the GitHub Issue.
  create-issue:
    needs: check-for-items
    if: needs.check-for-items.outputs.create_issue == 'true'
    runs-on: ubuntu-latest
    permissions:
      issues: write # IMPORTANT: This permission is required to create issues
      
    steps:
      # CORRECTED: Added a checkout step to this job so the 'gh' CLI has repository context.
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Create GitHub Issue via CLI
        env:
          # The GITHUB_TOKEN is required for authentication.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Pass the outputs from the previous job as environment variables.
          ISSUE_TITLE: ${{ needs.check-for-items.outputs.issue_title }}
          ISSUE_BODY: ${{ needs.check-for-items.outputs.issue_body }}
        run: |
          # This is a robust way to handle multi-line strings in shell scripts.
          # It writes the body to a temporary file first.
          echo "$ISSUE_BODY" > issue_body.md
          
          # The 'gh issue create' command reads the title from the environment variable
          # and the body from the file we just created. Using --label multiple times is
          # the most reliable way to add several labels.
          gh issue create \
            --title "$ISSUE_TITLE" \
            --body-file issue_body.md \
            --label "bug" \
            --label "human-required" \
            --label "agent-reported" \
            --assignee "sagearbor"
